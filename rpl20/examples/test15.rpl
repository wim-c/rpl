
--
-- Adapted from benchmark program in Creative Computing Magazine, November
-- 1982 issue.  Changed from original benchmark by filling a  screen of 1000
-- characters at once, instead of per page for a total of 1024 characters.
-- Original code written by Gregory Yob.
--

-- Push start jiffy clock values.
clock &

-- Perform benchmark.
doall &

-- Push stop jiffy clock values.
clock &

-- Clear the screen.
clear &

-- Print stop and start clock, both with their least significant byte first.
6 1 for
    str print " " print
next
stop

-- Push three jiffy clock bytes, most significant first.
clock:
    141 peek 142 peek 143 peek return

-- Clear the screen.
clear:
    32768 # 999 + % for
        -- Poke space to position.
        32 fn poke
    next
    return

-- Perform the benchmark.
doall:
    255 0 for
        -- Push start character and fill four pages.
        fn doscreen &
    next
    return

-- Fill screen starting from given character.
-- (char -- )
doscreen:
    -- Loop over one screen.
    -- (char -- char)
    32768 # 999 + % for
        -- Poke character to screen.
        # fn poke

        -- Prepare next character to show.
        1 +
    next

    -- Pop character and return
    -- (char -- )
    . return
