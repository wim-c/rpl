
REM cursor to initial position
show &

REM flash cursor
0 flash poke

move:
    REM get char
    get # 0 = if
        . move goto
    then
        REM show input
        # put &

        REM move around with supported keys
        # HKEY = cont if . left then
        # JKEY = cont if . down then
        # KKEY = cont if . up then
        # LKEY = cont if . right then

        REM ignore other input
        . move goto
    end

    REM reposition cursor
    show &

    REM handle next move
    move goto

let left:
    x @ # if 1 - x ! then . end
end

let down:
    y @ # 24 < if 1 + y ! then . end
end

let up:
    y @ # if 1 - y ! then . end
end

let right:
    x @ # 39 < if 1 + x ! then . end
end

let put def
    A poke chrout sys
end

REM position cursor
let show def
    REM line in X
    y @ X poke

    REM column in Y
    x @ Y poke

    REM clear carry
    0 P poke

    REM set cursor
    plot sys
end

let HKEY: $48 end
let JKEY: $4a end
let KKEY: $4b end
let LKEY: $4c end
    
let flash: $cc end
let plot: $fff0 end
let chrout: $ffd2 end
let A: $30c end
let X: $30d end
let Y: $30e end
let P: $30f end

let x [0]
let y [0]
